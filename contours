import cv2
import numpy
import math
from enum import Enum
import os


img = cv2.imread('traffic_dark.jpeg')
assert img is not None, "file could not be read, check with os.path.exists()"

imgray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

scale_percent = 20  # percent of original size
width = int(imgray.shape[1] * scale_percent / 100)
height = int(imgray.shape[0] * scale_percent / 100)
dim = (width, height)

# resize image
resized = cv2.resize(imgray, dim, interpolation=cv2.INTER_AREA)



ret, thresh = cv2.threshold(resized, 127, 255, 0)
contours, hierarchy = cv2.findContours(thresh, cv2.RETR_TREE, cv2.CHAIN_APPROX_NONE)

#contours = pipeline.find_contours_output

#cnt = contours[4]
#cv2.drawContours(resized, [cnt], 0, (0,255,0), 3)
cv2.drawContours(resized, contours, -1, (0,255,0), 3)



# The function cv2.imshow() is used to display an image in a window.
cv2.imshow('grayscale image', resized)


# waitKey() waits for a key press to close the window and 0 specifies indefinite loop
cv2.waitKey(0)

# cv2.destroyAllWindows() simply destroys all the windows we created.
cv2.destroyAllWindows()

# The function cv2.imwrite() is used to write an image.
cv2.imwrite('grayscale.jpg', resized)








